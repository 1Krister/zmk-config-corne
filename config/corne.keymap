#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#include "keys_sv.h"

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        adob: adob {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(RIGHT_ALT)>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_3 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            label = "ADOB";
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 29>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <15 21>;
        };

        perc {
            bindings = <&kp SV_PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp SV_EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp SV_DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp SV_POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp SV_AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp SV_BACKSLASH>;
            key-positions = <26 14>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <28 27>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <26 27>;
        };

        star {
            bindings = <&kp SV_STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SV_SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp SV_PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp SV_MINUS>;
            key-positions = <31 19>;
        };

        underscore {
            bindings = <&kp SV_UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp SV_LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp SV_RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB    &kp SV_Q        &kp SV_W          &kp SV_E          &kp SV_R       &kp SV_T        &kp SV_Y    &kp SV_U      &kp SV_I          &kp SV_O    &kp SV_P         &kp SV_A_RING
&kp LSHFT  &hm LSHFT SV_A  &hm LCTRL SV_S    &hm LGUI SV_D     &hm LALT SV_F  &kp SV_G        &kp SV_H    &kp SV_J      &kp SV_K          &kp SV_L    &kp SV_O_UMLAUT  &kp SV_A_UMLAUT
&kp LCTRL  &kp SV_Z        &kp SV_X          &kp SV_C          &kp SV_V       &kp SV_B        &kp SV_N    &kp SV_M      &kp SV_COMMA      &kp SV_DOT  &kp SV_MINUS     &kp RSHFT
                         &kp LGUI  &mo 1  &kp SV_SPACE    &kp RET  &lt 2 TAB  &kp LEFT_ALT
            >;
        };

        NAV {
            display-name = "NavNum";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp ESC     &kp SV_N1   &kp SV_N2      &kp SV_N3      &kp SV_N4            &kp SV_N5         &kp SV_N6   &kp SV_N7   &kp SV_N8   &kp SV_N9   &kp SV_N0      &kp BACKSPACE
&caps_word  &kp HOME    &trans         &kp UP_ARROW   &browsertab          &kp PAGE_UP       &kp SV_N0   &kp SV_N4   &kp SV_N5   &kp SV_N6   &kp SV_PIPE    &kp DELETE
&trans      &kp END     &kp LEFT       &kp DOWN       &kp RIGHT_ARROW      &kp PAGE_DOWN     &trans      &kp SV_N1   &kp SV_N2   &kp SV_N3   &trans         &trans
                          &kp LGUI      &trans           &kp SPACE        &kp RET  &trans        &kp RIGHT_ALT
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp SV_EXCL  &kp SV_AT       &kp SV_HASH     &kp SV_DLLR      &kp SV_PRCNT    &kp SV_CARET    &kp SV_AMPS    &kp SV_ASTRK  &kp SV_LPAR  &kp SV_RPAR  &trans
&trans  &trans       &trans          &kp UP_ARROW    &trans           &kp SV_GRAVE    &kp SV_MINUS    &kp SV_EQUAL   &kp SV_LBKT   &kp SV_RBKT  &kp SV_BSLH  &trans
&trans  &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TILDE       &kp SV_UNDER    &kp SV_PLUS    &kp SV_LBRC   &kp SV_RBRC  &kp SV_PIPE  &trans
                                     &kp LGUI        &trans           &kp SPACE       &kp RET         &trans     &trans
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &kp F11       &kp F12       &trans        &trans      &mkp LCLK         &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &bootloader  &trans
                                    &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
